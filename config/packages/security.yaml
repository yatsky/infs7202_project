security:

    encoders:
      App\Entity\User:
          algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        db_provider:
          entity:
            class: App\Entity\User
            property: username
        in_memory:
            memory:
                users:
                    ryan:
                        password: ryanpass
                        roles: 'ROLE_USER'
                    admin:
                        password: kitten
                        roles: 'ROLE_ADMIN'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            provider: db_provider
            anonymous: ~
            http_basic: ~
            form_login:
              check_path: signin
              login_path: signin
              default_target_path: show_user
              always_use_default_target_path: true

            logout:
                # The route name the user can go to in order to logout
                path: security_logout
                # The name of the route to redirect to after logging out
                target: homepage
            # activate different ways to authenticate

#             http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

#             form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/signin, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/new-photo, roles: ROLE_USER }
         - { path: ^/user, roles: ROLE_USER }

#    encoders:
#      Symfony\Component\Security\Core\User\User:
#          algorithm: bcrypt
#          cost: 12
